name: Deploy service
description: >-
  Copies the service's Docker image to the target environment's ECR repository, tags the image with
  'latest' and updates the ECS service, forcing a new deployment to happen.

inputs:
  version:
    description: The version of the service and its build artifacts
    required: true
  environment:
    description: The name of the GitHub deployment environment
    required: true
  aws-account-id:
    description: The AWS account to deploy into
    required: true
  aws-region:
    description: The region of the deployment AWS account
    required: true
  aws-account-id-ecr-src:
    description: >-
      The AWS account of the source ECR repository, from which the Docker image is copied to the
      deployment environment
    required: true
  aws-region-ecr-src:
    description: The region of the source AWS account and ECR repository
    required: true

runs:
  using: composite
  steps:
    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@55729fcebec3d284f60f5bcabbd8376437d696b1  # v2.0.7
      id: create-deployment
      with:
        token: ${{ github.token }}
        environment: ${{ inputs.environment }}

    - name: Copy Docker image to deployment environment
      id: copy-docker-image
      uses: ./.github/actions/ecr-copy
      with:
        src-aws-account-id: '${{ inputs.aws-account-id-ecr-src }}'
        dst-aws-account-id: '${{ inputs.aws-account-id }}'
        src-aws-region: '${{ inputs.aws-region-ecr-src }}'
        dst-aws-region: '${{ inputs.aws-region }}'
        src-ecr-repository-name: 'route-sequencer'
        dst-ecr-repository-name: 'route-sequencer'
        src-tag: '${{ inputs.version }}'
        dst-tag: '${{ inputs.version }}'
        tag-latest: 'true'

    - name: Deploy service to ECS
      uses: ./.github/actions/ecs-deploy
      with:
        aws-account-id: '${{ inputs.aws-account-id }}'
        aws-region: '${{ inputs.aws-region }}'
        cluster: 'service'
        service: 'route-sequencer'
        await-completion: 'true'

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806  # v2.0.3
      with:
        token: ${{ github.token }}
        deployment-id: ${{ steps.create-deployment.outputs.deployment_id }}
        state: success

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806  # v2.0.3
      with:
        token: ${{ github.token }}
        deployment-id: ${{ steps.create-deployment.outputs.deployment_id }}
        state: failure
